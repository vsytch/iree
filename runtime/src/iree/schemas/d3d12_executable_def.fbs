// Copyright 2022 The IREE Authors
//
// Licensed under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

namespace iree;

// 'D3D12 Executable'.
file_identifier "dx12";
file_extension "dx12";

// A struct for D3D12 threadgroup size along each dimension.
struct D3D12ThreadgroupSize {
  x:uint32;
  y:uint32;
  z:uint32;
}

// A D3D12 shader library and runtime pipeline state description.
// This information is used to create D3D12Library, D3D12Function and pipeline
// state objects.
table D3D12ExecutableDef {
  // A map of entry point ordinals to string names as used in the shader
  // library.
  entry_points:[string];

  // Threadgroup sizes for each entry point.
  //
  // We need this because workgroup size is directly baked inside SPIR-V code,
  // but in D3D12 it's specified when dispatching workload. So when cross
  // compiling SPIR-V to D3D12, we need to persist the information here so that
  // later it can be used for dispatching.
  // TODO(vsytch): support SPIR-V specialization constant.
  threadgroup_sizes:[D3D12ThreadgroupSize];

  // Shader content can be provided as either a serialized library or in the
  // form of source code strings.

  // Serialized D3D12 shader library.
  shader_library:[uint8];
  // Original D3D12 shader source code.
  shader_sources:[string];
}

root_type D3D12ExecutableDef;
